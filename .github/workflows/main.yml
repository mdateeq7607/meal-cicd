#name: "build pipeline for web release"
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#      - run: flutter pub get
#      - run: flutter build web
#
#      # copy file for netlify.toml
#      - name: Copy build settings to build folder
#        run: cp netlify.toml build/web/
#
#      # deploy application to netlify
#      - name: Deploy production to Netlify
#        uses: South-Paw/action-netlify-deploy@v1.2.0
#        with:
#          github-token: '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'
#          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
#          build-dir: './build/web'
#          comment-on-commit: true


#name: Build and Release
#'on':
#  push:
#    branches:
#      - main
#      -
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
##      - name: Init gradle wrapper
##        run: gradle wrapper
##      - name: build release
##        run: ./gradlew assembleRelease
#      - run: flutter build apk
#      - uses: actions/upload-artifact@master
#        with:
#          name: apk-release
#          path: app/build/app/outputs/bundle/release/app-release.apk
#
#      - name: upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
#          groups: testers
#          file: app/build/outputs/apk/release/app-release.apk

#name: CI
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'beta'
#      # Get flutter dependencies.
#      - run: flutter pub get
#
#      # Check for any formatting issues in the code.
##      - run: flutter format --set-exit-if-changed .
#
#      # Statically analyze the Dart code for any errors.
##      - run: flutter analyze .
#
#      # Run widget tests for our flutter project.
##      - run: flutter test
#
#      # Build apk.
#      - run: flutter build apk
#
#      - uses: actions/upload-artifact@master
#        with:
#          name: apk-release
#          path: app/build/app/outputs/flutter-apk/app-release.apk
#
#      - name: upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
#          groups: testers
#          file: app/build/app/outputs/flutter-apk/app-release.apk


name: Android CI

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Frogobox ID

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/